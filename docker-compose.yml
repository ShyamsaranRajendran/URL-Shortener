version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - url-shortener-network

  api-gateway:
    build: ./api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - USER_SERVICE_URL=http://user-service:3001
      - URL_SERVICE_URL=http://url-service:3002
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_URL=redis://redis:6379
      - CLIENT_URL=http://frontend:5173
    volumes:
      - ./api-gateway:/app
      - /app/node_modules
    depends_on:
      - redis
      - user-service
      - url-service
    networks:
      - url-shortener-network

  frontend:
    build: ./frontend
    ports:
      - "5173:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api-gateway
    networks:
      - url-shortener-network

  url-service:
    build: ./url-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_TLS=false
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=saran2005
      - DB_NAME=auth_db
      - DB_SSL=false
    volumes:
      - ./url-service:/app
      - /app/node_modules
    depends_on:
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - url-shortener-network

  user-service:
    build: ./user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_TLS=false
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=saran2005
      - DB_NAME=auth_db
      - DB_SSL=false
    volumes:
      - ./user-service:/app
      - /app/node_modules
    depends_on:
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - url-shortener-network

volumes:
  redis_data:

networks:
  url-shortener-network:
    driver: bridge
